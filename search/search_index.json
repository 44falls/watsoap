{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"WATSOAP \u00b6 WATSOAP (What's The Status Of API) is a API health-checking monitoring tool Purpose \u00b6 Manually monitoring the health of APIs is a time-consuming and painful task. This tool purpose is to automatically monitor the health of APIs. Features \u00b6 Collects the current health status of configured APIs. Generates the health status reports in a variety of file formats. Prerequisite \u00b6 Install git , If it is already installed, ignore it. Install Python , If it is already installed, ignore it. If Poetry is not already installed on your local machine, proceed as follows. $ python -m pip install --upgrade pip $ pip install poetry Setup \u00b6 With GIT \u00b6 Clone this repository to your local machine. $ git https://github.com/nawinto99/watsoap.git Change the working directory as follows. $ cd watsoap Run following command which will install the necessary dependencies. $ poetry install Rename the .env.dummy file in the config folder to .env. Usage \u00b6 Update the below configuration files in the config folder \u00b6 requests.yml -> Stores the list of requests to perform health checks. requests_data.yml -> Stores the information needed to trigger the API .env -> Stores the senstive information like Modify the requests configuration file, add list of endpoint names to mintor the health. /config/requests.yml Example: \u00b6 endpoints: [ \"MOCKBIN\", \"JSON_PLACE_HOLDER\" ] Modify the requests data configuration file. Make sure to match the endpoint names as mentioned in step #1 . For each endpoint, create following list of keys. If you have common data for multiple endpoints, declare the GENERIC path and mention value as GENERIC to refer the value from GENERIC for each endpoint. /config/requests_data.yml base_url: Endpoint URL. method: Request method type. payload: Request Payload. params: Request Query Strings. auth_type: Authentication types, select one from following list ['NO-AUTH','BASIC', 'API-KEY']. auth_env_name: Authentication Environment Variable name, refer step #3 for more details. Example: \u00b6 GENERIC: doc: > This is generic section where endpoints picks the common information for all the API endpoints payload: | { \"body\": \"bar\", \"userId\": 1 } headers: | { \"Content-Length\": \"253\", \"Content-Type\": \"application/json\", \"x-pretty-print\": \"2\" } JSON_PLACE_HOLDER: base_url: \"https://jsonplaceholder.typicode.com/posts\" method: \"POST\" headers: | { \"Content-type\": \"application/json; charset=UTF-8\" } payload: | { \"title\": \"foo\", \"body\": \"bar\", \"userId\": 1 } params: \"\" auth_type: \"BASIC\" auth_env_name: \"BASIC_AUTH_GENERIC\" MOCKBIN: base_url: \"http://mockbin.com/request\" method: \"POST\" headers: \"GENERIC\" payload: | { \"foo\": \"bar\" } params: | { \"foo\":[\"bar\",\"baz\"] } auth_type: \"BASIC\" auth_env_name: \"MOCKBIN\" Modify the environmental configuration file, create the environmental variable name as same as mentioned in step #2 , auth_env_name . > /config/.env Example: \u00b6 DOMAIN=example.org ADMIN_EMAIL=admin@${DOMAIN} ROOT_URL=${DOMAIN}/app BASIC_AUTH_GENERIC= { \"user_name\":\"ddvdv\", \"password\":\"pppp\"} MOCKBIN= { \"user_name\":\"ddvdv\", \"password\":\"pppp\"} Run the application \u00b6 $ cd watsoap $ chmod +x run.sh $ ./run.sh","title":"Home"},{"location":"#watsoap","text":"WATSOAP (What's The Status Of API) is a API health-checking monitoring tool","title":"WATSOAP"},{"location":"#purpose","text":"Manually monitoring the health of APIs is a time-consuming and painful task. This tool purpose is to automatically monitor the health of APIs.","title":"Purpose"},{"location":"#features","text":"Collects the current health status of configured APIs. Generates the health status reports in a variety of file formats.","title":"Features"},{"location":"#prerequisite","text":"Install git , If it is already installed, ignore it. Install Python , If it is already installed, ignore it. If Poetry is not already installed on your local machine, proceed as follows. $ python -m pip install --upgrade pip $ pip install poetry","title":"Prerequisite"},{"location":"#setup","text":"","title":"Setup"},{"location":"#with-git","text":"Clone this repository to your local machine. $ git https://github.com/nawinto99/watsoap.git Change the working directory as follows. $ cd watsoap Run following command which will install the necessary dependencies. $ poetry install Rename the .env.dummy file in the config folder to .env.","title":"With GIT"},{"location":"#usage","text":"","title":"Usage"},{"location":"#update-the-below-configuration-files-in-the-config-folder","text":"requests.yml -> Stores the list of requests to perform health checks. requests_data.yml -> Stores the information needed to trigger the API .env -> Stores the senstive information like Modify the requests configuration file, add list of endpoint names to mintor the health. /config/requests.yml","title":"Update the below configuration files in the config folder"},{"location":"#example","text":"endpoints: [ \"MOCKBIN\", \"JSON_PLACE_HOLDER\" ] Modify the requests data configuration file. Make sure to match the endpoint names as mentioned in step #1 . For each endpoint, create following list of keys. If you have common data for multiple endpoints, declare the GENERIC path and mention value as GENERIC to refer the value from GENERIC for each endpoint. /config/requests_data.yml base_url: Endpoint URL. method: Request method type. payload: Request Payload. params: Request Query Strings. auth_type: Authentication types, select one from following list ['NO-AUTH','BASIC', 'API-KEY']. auth_env_name: Authentication Environment Variable name, refer step #3 for more details.","title":"Example:"},{"location":"#example_1","text":"GENERIC: doc: > This is generic section where endpoints picks the common information for all the API endpoints payload: | { \"body\": \"bar\", \"userId\": 1 } headers: | { \"Content-Length\": \"253\", \"Content-Type\": \"application/json\", \"x-pretty-print\": \"2\" } JSON_PLACE_HOLDER: base_url: \"https://jsonplaceholder.typicode.com/posts\" method: \"POST\" headers: | { \"Content-type\": \"application/json; charset=UTF-8\" } payload: | { \"title\": \"foo\", \"body\": \"bar\", \"userId\": 1 } params: \"\" auth_type: \"BASIC\" auth_env_name: \"BASIC_AUTH_GENERIC\" MOCKBIN: base_url: \"http://mockbin.com/request\" method: \"POST\" headers: \"GENERIC\" payload: | { \"foo\": \"bar\" } params: | { \"foo\":[\"bar\",\"baz\"] } auth_type: \"BASIC\" auth_env_name: \"MOCKBIN\" Modify the environmental configuration file, create the environmental variable name as same as mentioned in step #2 , auth_env_name . > /config/.env","title":"Example:"},{"location":"#example_2","text":"DOMAIN=example.org ADMIN_EMAIL=admin@${DOMAIN} ROOT_URL=${DOMAIN}/app BASIC_AUTH_GENERIC= { \"user_name\":\"ddvdv\", \"password\":\"pppp\"} MOCKBIN= { \"user_name\":\"ddvdv\", \"password\":\"pppp\"}","title":"Example:"},{"location":"#run-the-application","text":"$ cd watsoap $ chmod +x run.sh $ ./run.sh","title":"Run the application"}]}